<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canvas_width = 24;
canvas_height = 255;
canvas = surface_create(canvas_width,canvas_height);

hue = 0;
sat = 255;
val = 255;

edit_position = false;

if(surface_exists(canvas)){
    surface_set_target(canvas);
        for(var i = 0; i &lt; 256; i++){
            var col = make_color_hsv(i,255,255);
            draw_set_color(col);
                draw_line(0,i,canvas_width,i);
            draw_set_color(c_black);
        }
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_check_button_pressed(mb_left)){
    // if initially pressed inside
    if(mouse_x &gt; x &amp;&amp; mouse_x &lt; x + canvas_width &amp;&amp; mouse_y &gt; y &amp;&amp; mouse_y &lt; y + canvas_height){
        edit_position = true; // if mouse clicked within the bounds of the color picker box
    }
}

if(edit_position){

    if(mouse_check_button(mb_left)){ // if mouse is inside of the box with mouse left held
    
        hue = mouse_y - y; // update positions

        
    }
    
    // if the mouse is pressed outside of the box limit it to the confines of the box
    if(mouse_check_button_released(mb_left)){
        edit_position = false;
    }
    if(mouse_y &lt; y){
        hue = 0;
    }

    if(mouse_y &gt; y + canvas_height){
        hue = canvas_height;
    }
        
}

if(surface_exists(canvas)){
    draw_surface(canvas,x,y);
} else {
    canvas = surface_create(canvas_width,canvas_height);
}

draw_line(x-4,y+hue-1,x+canvas_width+4,y+hue-1);
draw_line(x-4,y+hue+1,x+canvas_width+4,y+hue+1);

draw_sprite(scp_sprite_handle,0,x+canvas_width+4,y + hue);
draw_sprite_ext(scp_sprite_handle,0,x-4,y + hue,-1,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
