<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>file=get_open_filename("Image File|*.bmp;*.png;*.gif;*.jpg;*jpeg", "");
frames=get_integer("Is this an animated gif?  If so, how many frames?",1);
remove_back=!show_question("Is the background transparent?");
sprite=sprite_add(file,frames,remove_back,false,0,0);
color_count=0;
var _colors=ds_list_create();

//Loop through Each frame of the sprite and look for colors.
for(var _i=0;_i&lt;frames;_i++)
{
    var _surf=surface_create(sprite_get_width(sprite),sprite_get_height(sprite));
    surface_set_target(_surf)
    {
        draw_clear_alpha(c_black,0);
        draw_sprite(sprite,_i,0,0);
    }
    surface_reset_target();
    
    //Find all unique colors
    var _buff = buffer_create(sprite_get_width(sprite)*sprite_get_height(sprite)*4, buffer_fixed, 4); 
    buffer_get_surface(_buff, _surf, 0, 0, 0);
    for(var _x=0; _x&lt;sprite_get_width(sprite); _x++)
    {
        for(var _y=0; _y&lt;sprite_get_height(sprite); _y++)
        {
            var _col = buffer_read(_buff, buffer_u32); 
            var _a = (_col &gt;&gt; 24) &amp; 255;
            var _r = (_col &gt;&gt; 16) &amp; 255;
            var _g = (_col &gt;&gt; 8) &amp; 255;
            var _b = _col &amp; 255;  
            var _col=make_colour_rgb(_r, _g, _b);
            if(ds_list_find_index(_colors,_col) == -1)
            {   //New Color
                show_debug_message("New Color: "+string(ds_list_size(_colors)));
                ds_list_add(_colors,_col);
            }
        }
    }
    surface_free(_surf);
    buffer_delete(_buff);
}
var _palette = surface_create(1,ds_list_size(_colors));

surface_set_target(_palette);
{
    draw_clear_alpha(c_white,1);
    ds_list_sort(_colors,true);
    for(var _i=0; _i&lt;ds_list_size(_colors);_i++)
    {
        var _col=ds_list_find_value(_colors,_i);
        draw_set_color(_col);
        draw_point(0,_i);
    }
}
surface_reset_target();
output = get_save_filename("Palette Sprite|*.png", "");
if(!string_pos(".png",output))
    output+=".png";
if(output != "")
{
    surface_save(_palette, output);
}
color_count=ds_list_size(_colors);
ds_list_destroy(_colors);
surface_free(_palette);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(keyboard_check_pressed(vk_enter))
{
    instance_destroy();
    instance_create(0,0,obj_palette_generator);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_text(5,5,"Palette Created with "+string(color_count)+" color(s)."+
             +"###"
             +"Press Enter to Generate Another Palette");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
